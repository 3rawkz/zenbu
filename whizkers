#!/usr/bin/env python2

description = """
A pystache based config templater.

Searches for a yaml file with a variable mapping in
~/.config/whizkers/variables.yaml,

a yaml file with an ignore sequence in (by default)
~/.config/whizkers/ignores.yaml,

and uses the templates in (by default)
~/.config/whizkers/templates/

to render into your home directory.

Additional variable files can be applied
by supplying them as arguments, in order of application.
"""

import os
import sys
import codecs
import argparse
import yaml
import re
from pystache import render


HOME = os.getenv('HOME')
CONFIG_DIR = os.getenv(
    'XDG_CONFIG_HOME',
    os.path.join(HOME, '.config'))
WHIZKERS_ROOT = os.path.join(
    CONFIG_DIR, 'whizkers')
WHIZKERS_VARS = os.path.join(
    WHIZKERS_ROOT, 'variables.yaml')
WHIZKERS_IGNORES = os.path.join(
    WHIZKERS_ROOT, 'ignores.yaml')
WHIZKERS_TEMPLATES = os.path.join(
    WHIZKERS_ROOT, 'templates')

def parse_args():
    parser = argparse.ArgumentParser(description=description)
    parser.add_argument('-t',
                        help="""
                        template directory.
                        Default: %s
                        """ % WHIZKERS_TEMPLATES,
                        dest='template_dir',
                        type=str,
                        default=WHIZKERS_TEMPLATES)
    parser.add_argument('-d',
                        help="""
                        destination directory.
                        Default: %s
                        """ % HOME,
                        dest='dest_dir',
                        type=str,
                        default=HOME)
    parser.add_argument('-i',
                        help="""
                        ignores file.
                        Default: %s
                        """ % WHIZKERS_IGNORES,
                        dest='ignores_file',
                        type=str,
                        default=WHIZKERS_IGNORES)
    parser.add_argument('variable_files',
                        help="additional variable files",
                        nargs='*',
                        type=str)
    return parser.parse_args()


def main():
    errs = False
    args = parse_args()

    variables = {}
    ignores = set()

    # Read the config
    try:
        with codecs.open(WHIZKERS_VARS, 'r', 'utf-8') as f:
            variables.update(yaml.load(f.read()) or {})
    except IOError:
        pass

    # Read additional files
    for name in args.variable_files:
        try:
            with codecs.open(name, 'r', 'utf-8') as f:
                variables.update(yaml.load(f.read()) or {})
        except IOError:
            print('Variable file %s not found.' % name)
            errs = True

    if not variables:
        print('No variables provided.')
        errs = True

    # Read ignores file
    try:
        with codecs.open(args.ignores_file, 'r', 'utf-8') as f:
            ignores |= set(yaml.load(f.read()))
    except IOError:
        pass

    # Errors?
    if errs:
        sys.exit(1)

    # Loop through the templates
    for root, subdirs, files in os.walk(args.template_dir):
        # Substitute the template dir for home dir
        dest_root = re.sub('^%s' % args.template_dir,
                           args.dest_dir, root)

        # Iterate through templates
        for name in files:
            ignore = False

            # Check ignore list
            for pattern in ignores:
                if re.match(pattern, name):
                    ignore = True
                    break

            if ignore:
                continue

            template = os.path.join(root, name)
            dest_file = os.path.join(dest_root, name)

            # Apply variables
            with codecs.open(template, 'r', 'utf-8') as f:
                applied = render(f.read(), variables)
                with codecs.open(dest_file, 'w', 'utf-8') as g:
                    g.write(applied)

if __name__ == '__main__':
    main()
